services:
  # nur als root kann man die Berechtigung des Volumes ändern
  change-vol-ownership:
    container_name: change-vol-ownership
    image: "ubuntu" # We can use any image we want as long as we can chown 
    user: "root" # Need a user priviliged enough to chown
    group_add: # Specify the group in question
      - ${GROUP_ID}
    volumes: # The volume to chown
      - data:/tmp/change-ownership
    command: chown -R ${USER_ID}:${GROUP_ID} /tmp/change-ownership 
  
  # Auch für das Volume für die Command-History müssen die Berechtigung geändert werden
  change-vol-ownership2:
    container_name: change-vol-ownership2
    image: "ubuntu" # We can use any image we want as long as we can chown
    user: "root" # Need a user priviliged enough to chown
    group_add: # Specify the group in question
      - ${GROUP_ID} 
    volumes: # The volume to chown
      - dev-workspace-bashhistory:/tmp/change-ownership
    command: chown -R ${USER_ID}:${GROUP_ID} /tmp/change-ownership 
  
  workspace:
    container_name: dev-workspace
    build:
      context: ./
      dockerfile: ./docker/workspace/Dockerfile
    environment: # these variables are available on run
      PRODUCTION: false
    volumes:
        - data:${PATH_DATA}
        - dev-workspace-bashhistory:/commandhistory
        - ../../..:/workspaces:cached
    depends_on:
      change-vol-ownership:
        # Wait for the ownership to change
        condition: service_completed_successfully
      change-vol-ownership2:
        # Wait for the ownership to change
        condition: service_completed_successfully

volumes:
  dev-workspace-bashhistory:
  data: